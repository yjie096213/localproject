server.port=8081
server.servlet.context-path=/mp

#spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
#spring.datasource.url=jdbc:mysql://127.0.0.1:3306/ceshi?useUnicode=true&characterEncoding=UTF-8
#spring.datasource.username=root
#spring.datasource.password=123456

spring.shardingsphere.datasource.names=master1,master2,slave1,slave2

# 配置允许一个实体类映射多张表
#spring.main.allow-bean-definition-overriding=true

spring.shardingsphere.datasource.master1.type=com.alibaba.druid.pool.DruidDataSource
spring.shardingsphere.datasource.master1.driver-class-name=com.mysql.cj.jdbc.Driver
spring.shardingsphere.datasource.master1.url=jdbc:mysql://127.0.0.1:3306/ceshi1?useUnicode=true&characterEncoding=UTF-8
spring.shardingsphere.datasource.master1.username=root
spring.shardingsphere.datasource.master1.password=123456

spring.shardingsphere.datasource.master2.type=com.alibaba.druid.pool.DruidDataSource
spring.shardingsphere.datasource.master2.driver-class-name=com.mysql.cj.jdbc.Driver
spring.shardingsphere.datasource.master2.url=jdbc:mysql://127.0.0.1:3306/ceshi2?useUnicode=true&characterEncoding=UTF-8
spring.shardingsphere.datasource.master2.username=root
spring.shardingsphere.datasource.master2.password=123456

spring.shardingsphere.datasource.slave1.type=com.alibaba.druid.pool.DruidDataSource
spring.shardingsphere.datasource.slave1.driver-class-name=com.mysql.cj.jdbc.Driver
spring.shardingsphere.datasource.slave1.url=jdbc:mysql://127.0.0.1:3306/ceshi3?useUnicode=true&characterEncoding=UTF-8
spring.shardingsphere.datasource.slave1.username=root
spring.shardingsphere.datasource.slave1.password=123456

spring.shardingsphere.datasource.slave2.type=com.alibaba.druid.pool.DruidDataSource
spring.shardingsphere.datasource.slave2.driver-class-name=com.mysql.cj.jdbc.Driver
spring.shardingsphere.datasource.slave2.url=jdbc:mysql://127.0.0.1:3306/ceshi4?useUnicode=true&characterEncoding=UTF-8
spring.shardingsphere.datasource.slave2.username=root
spring.shardingsphere.datasource.slave2.password=123456

# 读写分离
#spring.shardingsphere.masterslave.load-balance-algorithm-type=round_robin
#spring.shardingsphere.masterslave.name=ms

#这里配置读写分离的时候一定要记得添加主库的数据源名称 这里为master1,master2
#指定master1为主库，slave1为它的从库
spring.shardingsphere.sharding.master-slave-rules.master1.master-data-source-name=master1
spring.shardingsphere.sharding.master-slave-rules.master1.slave-data-source-names=slave1
#指定master2为主库，slave2为它的从库
spring.shardingsphere.sharding.master-slave-rules.master2.master-data-source-name=master2
spring.shardingsphere.sharding.master-slave-rules.master2.slave-data-source-names=slave2

#单库分表规则
#spring.shardingsphere.sharding.tables.student.actual-data-nodes=ds1.student_$->{3312..3314}

#多库分表规则
spring.shardingsphere.sharding.tables.student.actual-data-nodes=master$->{1..2}.student_$->{3312..3314}

# 指定数据库分片策略 约定age值是偶数添加到ceshi2中，奇数添加到ceshi1中
spring.shardingsphere.sharding.tables.student.database-strategy.inline.sharding-column=age
spring.shardingsphere.sharding.tables.student.database-strategy.inline.algorithm-expression=master$->{age % 2 + 1}

# 指定student表 主键id 生成策略为 SNOWFLAKE
#spring.shardingsphere.sharding.tables.student.key-generator.column=id
#spring.shardingsphere.sharding.tables.student.key-generator.type=UUID

#指定主键
spring.shardingsphere.sharding.tables.student.table-strategy.inline.sharding-column=no
#分表规则为主键除以3取模
spring.shardingsphere.sharding.tables.student.table-strategy.inline.algorithm-expression=student_$->{no}

## 默认的AES加密器
#spring.shardingsphere.encrypt.encryptors.encryptor_aes.type=aes
#spring.shardingsphere.encrypt.encryptors.encryptor_aes.props.aes.key.value=123456abc
#
## 默认的MD5加密器
#spring.shardingsphere.encrypt.encryptors.encryptor_md5.type=md5
#
## name 编号 AES加密
#spring.shardingsphere.encrypt.tables.student.columns.name.plainColumn=name
#spring.shardingsphere.encrypt.tables.student.columns.name.cipherColumn=name_encryptor
#spring.shardingsphere.encrypt.tables.student.columns.name.encryptor=encryptor_aes
#
## no 编号 MD5加密
#spring.shardingsphere.encrypt.tables.student.columns.no.cipherColumn=no
#spring.shardingsphere.encrypt.tables.student.columns.no.encryptor=encryptor_md5
#
## 是否使用密文查询
#spring.shardingsphere.props.query.with.cipher.comlum=false

# 是否显示sql
spring.shardingsphere.props.sql.show=true

#spring.main.allow-bean-definition-overriding=true
